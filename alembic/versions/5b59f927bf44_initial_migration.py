"""Initial migration

Revision ID: 5b59f927bf44
Revises: 
Create Date: 2024-08-24 23:38:37.600843

"""
import sqlalchemy as sa
import sqlmodel
from sqlalchemy import Column
from sqlmodel import SQLModel
from sqlmodel.sql.sqltypes import AutoString


from typing import Sequence, Union

from alembic import op
# import sqlalchemy as sa
# from sqlmodel import AutoString


# revision identifiers, used by Alembic.
revision: str = '5b59f927bf44'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('jubileumtypes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('naam', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('jubileumtypes', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_jubileumtypes_naam'), ['naam'], unique=True)

    op.create_table('relatietypes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('relatienaam', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('rollen',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('naam', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('rollen', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_rollen_naam'), ['naam'], unique=True)

    op.create_table('gebruikers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('naam', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('google_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('rol_id', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['rol_id'], ['rollen.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('gebruikers', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_gebruikers_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_gebruikers_google_id'), ['google_id'], unique=True)

    op.create_table('families',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('familienaam', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('straatnaam', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('huisnummer', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('huisnummer_toevoeging', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('postcode', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('plaats', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['gebruikers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('personen',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('voornaam', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('achternaam', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('leeft', sa.Boolean(), nullable=False),
    sa.Column('familie_id', sa.Integer(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['gebruikers.id'], ),
    sa.ForeignKeyConstraint(['familie_id'], ['families.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('jubilea',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('jubileumdag', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('omschrijving', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('persoon_id', sa.Integer(), nullable=True),
    sa.Column('jubileumtype_id', sa.Integer(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['gebruikers.id'], ),
    sa.ForeignKeyConstraint(['jubileumtype_id'], ['jubileumtypes.id'], ),
    sa.ForeignKeyConstraint(['persoon_id'], ['personen.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('relaties',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('persoon1_id', sa.Integer(), nullable=False),
    sa.Column('persoon2_id', sa.Integer(), nullable=False),
    sa.Column('relatietype_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['persoon1_id'], ['personen.id'], ),
    sa.ForeignKeyConstraint(['persoon2_id'], ['personen.id'], ),
    sa.ForeignKeyConstraint(['relatietype_id'], ['relatietypes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generat ed by Alembic - please adjust! ###
    op.drop_table('relaties')
    op.drop_table('jubilea')
    op.drop_table('personen')
    op.drop_table('families')
    with op.batch_alter_table('gebruikers', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_gebruikers_google_id'))
        batch_op.drop_index(batch_op.f('ix_gebruikers_email'))

    op.drop_table('gebruikers')
    with op.batch_alter_table('rollen', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_rollen_naam'))

    op.drop_table('rollen')
    op.drop_table('relatietypes')
    with op.batch_alter_table('jubileumtypes', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_jubileumtypes_naam'))

    op.drop_table('jubileumtypes')
    # ### end Alembic commands ###
